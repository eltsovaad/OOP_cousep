import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.util.ArrayList;

public class TableForm extends JDialog {
    private JPanel contentPane;
    private JTable table1;
    private JScrollPane scrollPane;
    private JButton buttonOK;
    String[][] data;
    String[] columnNames;
    boolean isButtonVisible;

    public TableForm(ArrayList persons, boolean isFromSearch, boolean isPatientList) {

        isButtonVisible = isFromSearch;
        if (isPatientList) {
            columnNames = new String[]{"Фамилия", "Имя", "Отчество", "Паспорт", "Полис"};
            /*for (int i = 0; i < table1.getColumnCount(); i++) {
                TableColumn column1 = table1.getTableHeader().getColumnModel().getColumn(i);

                column1.setHeaderValue(columnNames[i]);
            }*/
            if (persons.size() != 0) {
                ArrayList<Patient> pats = persons;
                data = new String[pats.size()][5];
                for (int i = 0; i < pats.size(); i++) {
                    data[i][0] = pats.get(i).getSurname();
                    data[i][1] = pats.get(i).getName();
                    data[i][2] = pats.get(i).getLastName();
                    data[i][3] = Integer.toString(pats.get(i).getPassportNum());
                    data[i][4] = Integer.toString(pats.get(i).getPolisNum());
                }
            }
        } else {
            columnNames = new String[]{"Фамилия", "Имя", "Отчество", "Место работы", "Специальность"};
           /* for (int i = 0; i < table1.getColumnCount(); i++) {
                TableColumn column1 = table1.getTableHeader().getColumnModel().getColumn(i);

                column1.setHeaderValue(columnNames[i]);
            }*/
            if (persons.size() != 0) {
                ArrayList<Doctor> docs = persons;
                data = new String[docs.size()][5];
                for (int i = 0; i < docs.size(); i++) {
                    data[i][0] = docs.get(i).getSurname();
                    data[i][1] = docs.get(i).getName();
                    data[i][2] = docs.get(i).getLastName();
                    data[i][3] = docs.get(i).getWorkPlace();
                    data[i][4] = docs.get(i).getProfession();
                }
            }
        }
        $$$setupUI$$$();
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        //columnNames=new String[]{null,null,null,null,null};
        table1 = new JTable(data, columnNames);
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table1.setAutoscrolls(true);
        table1.setColumnSelectionAllowed(false);
        scrollPane1.setViewportView(table1);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
